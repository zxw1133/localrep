1)继承view
package w.x.z.customview;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.icu.text.DisplayContext;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;

/**
 * Created by 123456 on 2017/8/1.
 */
public class CircleView extends View{
    private int mColor= Color.RED;
    private Paint mPaint=new Paint(Paint.ANTI_ALIAS_FLAG);
    public CircleView(Context context) {
        this(context,null);
//        init();
    }

    public CircleView(Context context, AttributeSet attrs) {
        this(context, attrs,0);
//        init();
    }

    public CircleView(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.CircleView);
        mColor=typedArray.getColor(R.styleable.CircleView_circle_corlor,Color.RED);
        typedArray.recycle();
        init();
    }

    private void init() {
        mPaint.setColor(mColor);
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        int wmode = MeasureSpec.getMode(widthMeasureSpec);
        int wsize = MeasureSpec.getSize(widthMeasureSpec);
        int hmode = MeasureSpec.getMode(heightMeasureSpec);
        int hsize = MeasureSpec.getSize(heightMeasureSpec);
        Log.e("miss",wsize+";"+hsize);
        Log.e("miss",hmode+";"+wmode);
        if(wmode==MeasureSpec.AT_MOST && hmode==MeasureSpec.AT_MOST){
            setMeasuredDimension(200,200);
        }else if(wmode==MeasureSpec.AT_MOST){
            setMeasuredDimension(200,hsize);
        }else if(hmode==MeasureSpec.AT_MOST){
            Log.e("miss","zoule");
            setMeasuredDimension(wsize,200);
        }
        Log.e("miss",wsize+";"+hsize);
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
Log.e("miss",getWidth()+"|"+getHeight());
        int paddingleft=getPaddingLeft();
        int paddingright=getPaddingLeft();
        int paddingbottom=getPaddingLeft();
        int paddingtop=getPaddingLeft();
        int width = getWidth()-paddingleft-paddingright;
        int height = getHeight()-paddingbottom-paddingtop;
        int i = Math.min(width, height) / 2;
        canvas.drawCircle(paddingleft+width/2,paddingtop+height/2,i,mPaint);
    }
}

============================================
2)继承特定的view

=======================
3)继承viewgroup
4)继承特定的viewgroup;
