package com.zhangxiaowei.myapplication;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Environment;

import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Created by zhangxiaowei on 2017/8/5.
 * Email:1512546778@qq.com
 * Content:
 */
public class CrashHandler implements Thread.UncaughtExceptionHandler {
    private static final boolean DEBUG=true;
    private static final String PATH= Environment.getExternalStorageDirectory()
            .getPath()+"/Crash/log";
    private static final String FILE_NAME="crash";
    private static final String FILE_NAME_SUFFIX=".trace";
    private static CrashHandler instance =new CrashHandler();
    private Thread.UncaughtExceptionHandler mUncaughtExceptionHandler;
    private Context mContext;
    private CrashHandler(){

    }
    public static CrashHandler getInstance(){
        return instance;
    }
    private void init(Context context){
        mUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();
        Thread.setDefaultUncaughtExceptionHandler(this);

        mContext=context.getApplicationContext();
    }

    @Override
    public void uncaughtException(Thread thread, Throwable ex) {
        dumpExceptionToSDcard(ex);
        uploadException();
    }

    private void uploadException() {

    }

    private void dumpExceptionToSDcard(Throwable ex) {
        if(!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)){
            if(DEBUG){

            }
        }
        File file = new File(PATH);
        if(!file.exists()){
            file.mkdirs();
        }
        long l = System.currentTimeMillis();
        String time=new SimpleDateFormat("yyyy-mm-dd hh:mm:ss").format(new Date(l));
        File file1 = new File(PATH + FILE_NAME + time + FILE_NAME_SUFFIX);
        try {
            PrintWriter printWriter = new PrintWriter(new BufferedWriter(new FileWriter(file1)));
            printWriter.print(time);
            dumpPhoneInfo(printWriter);
            printWriter.println();
            ex.printStackTrace(printWriter);
            printWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void dumpPhoneInfo(PrintWriter printWriter) {
        PackageManager packageManager = mContext.getPackageManager();
        try {
            PackageInfo packageInfo = packageManager.getPackageInfo(mContext.getPackageName()
                    , PackageManager.GET_ACTIVITIES);
            printWriter.print("APP VERSIION: ");
            printWriter.print(packageInfo.versionName);
            printWriter.print("-");
            printWriter.println(packageInfo.versionCode);
            printWriter.print("os version: ");
            printWriter.print(Build.VERSION.RELEASE);
            printWriter.print("-");
            printWriter.println(Build.VERSION.SDK_INT);
            printWriter.print("vendor: ");
            printWriter.println(Build.MANUFACTURER);
            printWriter.print("model: ");
            printWriter.println(Build.MODEL);
            printWriter.print("cpu abi: ");
            printWriter.println(Build.CPU_ABI);


        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }
    }
}
=============================
在application的create中初始化;
