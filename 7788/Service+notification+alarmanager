package org.apache.cordova.Boot;

import android.app.ActivityManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Bitmap;
import android.os.IBinder;
import android.support.annotation.Nullable;
import android.support.v4.app.NotificationCompat;
import android.text.TextUtils;
import android.util.Log;

import com.goepe.www.R;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.concurrent.TimeUnit;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.FormBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

/**
 * Created by 123456 on 2017/2/27.
 */
public class LunxunServices extends Service {
    private NotificationManager manager;
    private Notification notification;
    static String ACTION="com.goepe.myapplication.LunxunServices";
    public static String next;
    private String title;
    private String content;
    private int num=0;
    private int flag=0;
    private long i;
    private String state;
    private String icon1;
    private long i2;
    private int mess;

    private long time_ok=0;
    private long time_err=0;
    private long times_ok=0;
    private long times_err=0;
    private long time_next=0;
    private long g_status=0;
    private long g_pollstatus=0;
    private LunxunServices lunxunServices;

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }
    @Override
    public void onCreate() {
        super.onCreate();
        flag=0;
        Log.e("miss","create");

    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        Log.e("miss","flag="+flag);
        if(flag==0){
            if(g_status==0){
//                String Path =getApplicationContext().getFilesDir().getAbsolutePath();
//                Storedata.setdataappend(Path + "/files/log","flag="+flag+";"+"time_next="+time_next);
                getdata();
            }
        }
        if(flag==1){
            Log.e("miss","timecha="+((System.currentTimeMillis()/1000)-time_ok-time_next)+",g_status="+g_status);
            if((System.currentTimeMillis()/1000)>=time_ok+time_next){
                if(g_status==0){
//                    String Path =getApplicationContext().getFilesDir().getAbsolutePath();
//                    Storedata.setdataappend(Path + "/files/log","flag="+flag+";"+"time_next="+time_next);
                    time_ok=0;
                    time_next=0;
                    getdata();
                }
            }
        }
        if(flag==2){
            if((System.currentTimeMillis()/1000)>=time_err+2){
                if(g_status==0){
//                    String Path =getApplicationContext().getFilesDir().getAbsolutePath();
//                    Storedata.setdataappend(Path + "/files/log","flag="+flag+";"+"time_next="+time_next);
                    time_err=0;
                    getdata();
                }
            }
        }
//        return super.onStartCommand(intent, flags, startId);
        return START_STICKY;
    }

    @Override
    public void onDestroy() {
        Log.e("miss","destory");
        super.onDestroy();

    }
    private void showNotificaition(){
        manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        final int icon = R.drawable.icon;
        Intent appIntent = new Intent(Intent.ACTION_MAIN);
        appIntent.addCategory(Intent.CATEGORY_LAUNCHER);
        appIntent.setComponent(new ComponentName(this.getPackageName(), this.getPackageName() + "." + "MainActivity"));
        appIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK| Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);//关键的一步，设置启动模式
        int i = content.indexOf("_._");
        String[] split = content.split("_._");
        if(i<0){

        }
        else{
            if(!TextUtils.isEmpty(split[1])){
//                double random = Math.random();
//                Log.e("mr",split[1]+random);
                appIntent.putExtra("feiyu_message",split[1]);
            }
            content=split[0];
//            appIntent.putExtra("feiyu1","else>??????");
        }
//        appIntent.putExtra("feiyu2","why?????");

        PendingIntent contentIntent =PendingIntent.getActivity(this, 0,appIntent,PendingIntent.FLAG_UPDATE_CURRENT);
        final NotificationCompat.Builder builder=new NotificationCompat.Builder(this).setSmallIcon(icon).setContentText(content)
                .setContentIntent(contentIntent).setContentTitle(title);//.setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.icon));

        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
//                    drawable = Drawable.createFromResourceStream(getResources(),null, new URL("http://style.goepe.com/css/1603/25subcyd/images/d1_wf.jpg").openStream(),"http://style.goepe.com/css/1603/25subcyd/images/d1_wf.jpg",null);
//                    Bitmap bitmap = DrawableUtils.drawableToBitmap(drawable);
//                    Bitmap bitmap1 = BitmapFactory.decodeStream(new URL("http://style.goepe.com/css/1603/25subcyd/images/d1_wf.jpg").openStream());
                    Bitmap bitmap2 = DrawableUtils.getBitmap(icon1);
                    if(bitmap2!=null){
                        builder.setLargeIcon(bitmap2);
                    }
                    Notification notice = builder.build();
                    notice.defaults |= Notification.DEFAULT_SOUND;
                    notice.defaults |= Notification.DEFAULT_VIBRATE;
                    notice.flags=Notification.FLAG_AUTO_CANCEL;
//        notificationId = notificationId++;//同一个id
                    manager.notify(0,notice);
                } catch (Exception e1) {
                    e1.printStackTrace();
                }
            }
        }).start();
    }
    private  void getdata(){
        g_status=1;
        Log.e("miss","g_status="+g_status);
        Log.e("miss","getdata"+Thread.currentThread().getId());
        try {
            new Thread(new Runnable() {
                String url="http://www.goepe.com/?inajax=1&gp_item=fastyu&action=poll";
                String Path =getApplicationContext().getFilesDir().getAbsolutePath();
                String countfile=Storedata.getdata(Path+"/files/count");
                String timeout=Storedata.getdata(Path+"/files/timeout");
                String kfile= Storedata.getdata(Path+"/files/kfile");
                String kid= Storedata.getdata(Path+"/files/kid");
                String time=String.valueOf(System.currentTimeMillis());
                String ksession = MD5.getMD5(kfile + time);
                @Override
                public void run() {
//                    OkHttpClient okHttpClient = new OkHttpClient();
                    OkHttpClient.Builder builder = new OkHttpClient().newBuilder()
                            .readTimeout(Integer.parseInt(timeout), TimeUnit.SECONDS);
                    OkHttpClient okHttpClient = builder.build();
                    FormBody build = new FormBody.Builder()
                            .add("ksession", ksession)
                            .add("kid", kid)
                            .add("time", time)
                            .add("num", countfile)
                            .add("state",State.STATE)
                            .build();
                    Request build1 = new Request.Builder()
                            .url(url)
                            .post(build)
                            .build();
                    okHttpClient.newCall(build1).enqueue(new Callback() {
                        @Override
                        public void onFailure(Call call, IOException e) {
//                            String Path =getApplicationContext().getFilesDir().getAbsolutePath();
//                            Storedata.setdataappend(Path + "/files/log","err:"+e.toString());
                            Log.e("error",e.toString());
                            g_pollstatus=-1;
                            stoplunxun();
                            time_err = System.currentTimeMillis() / 1000;
                            times_err++;
                            times_ok=0;
                            g_status=0;
                            flag=2;
                            Log.e("error",time_next+"");
                            startlunxun(2);
                        }
                        @Override
                        public void onResponse(Call call, Response response) throws IOException {
                            int countf = Integer.parseInt(countfile) + 1;
                            if(State.MESSAGE.equals("STOP")){
                                Storedata.setdata(Path + "/files/count","1");
                                State.MESSAGE="";
                                g_status=0;
                            }else {
                                Storedata.setdata(Path + "/files/count", String.valueOf(countf));
                                String r = response.body().string();
                                Log.e("miss", r);
//                                String Path =getApplicationContext().getFilesDir().getAbsolutePath();
//                                Storedata.setdataappend(Path + "/files/log","num:"+countf+",response:"+r);
                                JSONObject jsonObject = null;
                                try {
                                    jsonObject = new JSONObject(r);
                                    next = jsonObject.getString("next");
                                    state = jsonObject.getString("state");
                                    title = jsonObject.getString("title");
                                    content = jsonObject.getString("content");
                                    icon1 = jsonObject.getString("icon");
                                    if (next == null) {

                                    } else {
                                        if (State.STATE.equals(state)) {

                                        } else {
                                            if (TextUtils.isEmpty(state)) {

                                            } else {
                                                showNotificaition();
                                                State.STATE = state;
                                            }
                                        }
                                        g_pollstatus=1;
                                        stoplunxun();
                                        time_ok = System.currentTimeMillis() / 1000;
                                        time_next = Integer.parseInt(next);
                                        times_ok++;
                                        times_err=0;
                                        g_status=0;
                                        flag=1;
                                        Log.e("miss", "next="+time_next+"g_status="+g_status);
                                        startlunxun( Integer.parseInt(next));
//                                        if(g_pollstatus==-1){
//                                            startlunxun((int) time_next);
//                                        }
                                    }
                                } catch (JSONException e) {
                                    e.printStackTrace();
                                }
                            }

                        }
                    });
                }
            }).start();
            Log.e("miss","g_status end="+g_status);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void stoplunxun(){
        LunxunUtils.stoplunxunService(getApplicationContext(), LunxunServices.class, LunxunServices.ACTION);

    }
    private void startlunxun(int seconds){
        LunxunUtils.startlunxunService(getApplicationContext(),seconds,LunxunServices.class, LunxunServices.ACTION);
    }
}

